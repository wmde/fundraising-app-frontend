@use '@src/scss/settings/units';
@use 'sass:map';
@use 'sass:color';

$primary: #3366CC;
$error: #DD3333;
$white: #FFFFFF;
$black: #000000;
$gray-mid: #B7B7B7;
$gray-dark: #808080;

$input: (
	'border-radius': 8px,
	'border': 1px solid $gray-mid,
	'height': 42px,
	'font-size': 14px,
	'min-width': 272px,
	'max-width': 384px,
);

/**
These are the overrides for test C23_WMDE_Desktop_DE_06. If the VAR performs better then these
changes must be updated in the settings files before this file is deleted.
 */

.campaigns--new-design--new {
	font-size: 16px;

	.control {
		font-size: 16px;
	}

	* {
		font-family: "Source Sans Pro", "Open Sans", Helvetica,Arial, sans-serif;
	}

	.app-content {
		padding: map.get( units.$spacing, 'large' ) 0;
	}

	a:not( .navigation-item ):not( .footer-var-list a ):not( .dropdown-menu a ) {
		color: $primary;

		&:hover,
		&:focus {
			color: $black;
		}
	}

	.bank-data-content {
		word-wrap: break-word;
	}

	.navigation-item:hover,
	.navigation-item:focus,
	.navigation-item.active {
		color: $primary;
		border-color: $primary;
	}

	.navigation-locale-current {
		color: $primary;
		svg path {
			stroke: $primary;
		}
	}

	.sidebar-card {
		border-bottom-color: $primary;
	}

	.form-title {
		margin: 0 0 map.get( units.$spacing, 'large' );
		font-size: 24px;
		line-height: 26px;
	}

	.form-field-label {
		margin: 0 0 map.get( units.$spacing, 'small' );
		font-size: 16px;
	}

	.form-field-text .control,
	.form-field-select .control,
	.form-field-email .control,
	.form-field-autocomplete .control,
	.form-field-autocomplete-container,
	.form-field-radio-container.column-alignment .radio-form-input {
		max-width: map.get( $input, 'max-width' );
	}

	// If VAR wins then remove the rule that sets this to 350 from custom.scss
	.input,
	.field {
		max-width: 100%;
	}

	.form-field-amount-radio .radio-form-input,
	.text-form-input input,
	.text-form-input textarea,
	.select-form-input select {
		border-radius: map.get( $input, 'border-radius' );
		font-size: 16px;
	}

	.text-form-input input,
	.select-form-input select {
		border-radius: map.get( $input, 'border-radius' );
		height: map.get( $input, 'height' );
	}

	.form-field-autocomplete .dropdown-item {
		font-size: 16px;
	}

	.select:not(.is-multiple):not(.is-loading)::after {
		font-size: 12px;
	}

	// The error icon inside the text fields needs an alignment bump
	.text-form-input.has-icons-right .icon {
		height: 38px;
	}

	// The custom amount text field is still 50px
	#amount-custom {
		height: 50px;
	}

	.checkbox-single-form-input .check {
		margin-top: 2px;
	}

	.form-field-amount-radio .radio-form-input {
		color: $primary;

		&.active {
			background: $primary;
		}
	}

	.form-button {
		background: $primary;
		border-radius: map.get( $input, 'border-radius' );

		&:hover {
			background: color.adjust( $primary, $lightness: -5% );
		}

		&-outlined {
			color: $primary;
			border: 1px solid $primary;
			background: $white;

			&:hover {
				background: $primary;
				color: $white;
			}
		}
	}

	.checkbox-single-form-input input[type="checkbox"]:checked + .check {
		background-color: $primary;
	}

	.form-field-radio {
		max-width: map.get( $input, 'max-width' );
		flex-wrap: nowrap;
	}

	.radio-form-input {
		min-width: 106px;
		width: auto;
		border: 1px solid $gray-mid;
		border-radius: map.get( $input, 'border-radius' );
		padding: map.get( units.$spacing, 'x-small' ) map.get( units.$spacing, 'small' );

		&:hover,
		&:focus {
			border: 1px solid $gray-dark;
		}

		&.is-active {
			border-color: $primary;
			border-bottom: 1px solid $primary;
		}

		&:last-child {
			flex: 0 0 auto;
		}
	}

	.form-field-radio-container.column-alignment .radio-form-input {
		border-bottom: 1px solid $gray-mid;

		&:not( :last-child ) {
			margin-bottom: map.get( units.$spacing, 'small' );
		}

		&.is-active {
			border-color: $primary;
			border-bottom: 1px solid $primary;
		}

		&:not( :first-child ) {
			padding-top: map.get( units.$spacing, 'x-small' );
		}

		&:hover,
		&:focus {
			border: 1px solid $gray-dark;
		}
	}

	.radio-form-input input:checked + .check {
		border-color: $primary;

		&:before {
			background-color: $primary;
		}
	}

	.form-field-amount-radio {
		.radio-form-input {
			min-width: auto;
		}
	}

	.help.is-danger,
	.has-text-danger {
		// Need to use !important here because Bulma does..
		color: $error !important;
	}

	.is-danger.textarea,
	.is-danger.input {
		border-color: $error;
	}
}
