@use "settings/units";
@use "settings/colors";
@use "sass:map";
@use "../pattern_library/css/utilities/display-toggler.css";
@use "../pattern_library/css/utilities/link-button.css";
@use "../pattern_library/css/utilities/stretch-single-content-card.css";
@use "../pattern_library/css/utilities/visually-hidden.css";
@use "../pattern_library/css/compositions/cluster.css";
@use "../pattern_library/css/compositions/flex-field-group.css";
@use "../pattern_library/css/compositions/flow.css";
@use "../pattern_library/css/compositions/grid.css" as gridBase;
@use "../pattern_library/css/compositions/repel.css";
@use "../pattern_library/css/compositions/sidebar.css";
@use "../pattern_library/css/compositions/switcher.css" as switcherBase;
@use "../pattern_library/css/compositions/wrapper.css" as wrapperBase;
@use "../pattern_library/css/blocks/accordion.css" as accordionBase;
@use "../pattern_library/css/blocks/alert-box.css";
@use "../pattern_library/css/blocks/combobox.css" as comboboxBase;
@use "../pattern_library/css/blocks/field-container.css" as fieldContainerBase;
@use "../pattern_library/css/blocks/text-radio.css" as textRadioBase;
@use "../pattern_library/css/blocks/toggle.css" as toggleBase;
@use "pattern-library-compatibility/accordion";
@use "../pattern_library/css/blocks/tooltip.css";
@use "../pattern_library/css/blocks/verbose-checkbox.css";
@use "pattern-library-compatibility/combobox";
@use "pattern-library-compatibility/content-card";
@use "pattern-library-compatibility/field-container";
@use "pattern-library-compatibility/icon-text";
@use "pattern-library-compatibility/section-heading";
@use "pattern-library-compatibility/site-head";
@use "pattern-library-compatibility/summary";
@use "pattern-library-compatibility/switcher";
@use "pattern-library-compatibility/text-radio";
@use "pattern-library-compatibility/toggle";
@use "pattern-library-compatibility/wrapper";
@use "pattern-library-compatibility/button";

:root {
	/* Colours */
	--color-white: #{colors.$white};
	--color-black: #{colors.$black};
	--color-grey-100: #{colors.$gray-lighter};
	--color-grey-200: #e5e5e5;
	--color-grey-300: #{colors.$gray-mid};
	--color-grey-500: #{colors.$gray-dark};
	--color-grey-800: #{colors.$black};
	--color-blue-600: #{colors.$primary};
	--color-blue-200: #{colors.$primary-pale};
	--color-red-700: #{colors.$error};

	--font-base: "Source Sans Pro", "Open Sans", Helvetica, Arial, sans-serif;
	--font-mono: ui-monospace, "Cascadia Code", "Source Code Pro", Menlo, Consolas, "DejaVu Sans Mono", monospace;
	--font-normal: 400;
	--font-bold: 700;
	--wrapper-max-width: calc(960px + var(--gutter) + var(--gutter));
	--sidebar-content-min-width: 55%;
	--sidebar-target-width: 300px;
	--navigation-height: var(--space-2xl);
	--gutter: var(--space-xs-s);
	--stroke-width: 1px;
	--stroke-color: var(--color-grey-300);
	--stroke: var(--stroke-width) solid var(--stroke-color);
	--easing: cubic-bezier(0.885, 0.09, 0.49, 0.85);
	--border-radius: 8px;
	--form-field-max-width: 414px;
	--select-input-chevron: url("data:image/svg+xml,%3Csvg%20width%3D%22100%25%22%20height%3D%22100%25%22%20viewBox%3D%220%200%2022%2014%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20xml%3Aspace%3D%22preserve%22%20xmlns%3Aserif%3D%22http%3A%2F%2Fwww.serif.com%2F%22%20style%3D%22fill-rule%3Aevenodd%3Bclip-rule%3Aevenodd%3Bstroke-linejoin%3Around%3Bstroke-miterlimit%3A2%3B%22%3E%0A%20%20%20%20%3Cpath%20d%3D%22M9.939%2C12.657L0.747%2C3.464C0.162%2C2.879%200.162%2C1.929%200.747%2C1.343C1.332%2C0.758%202.283%2C0.758%202.868%2C1.343L11%2C9.475L19.132%2C1.343C19.717%2C0.758%2020.668%2C0.758%2021.253%2C1.343C21.838%2C1.929%2021.838%2C2.879%2021.253%2C3.464L12.061%2C12.657C11.475%2C13.242%2010.525%2C13.242%209.939%2C12.657Z%22%2F%3E%0A%3C%2Fsvg%3E") no-repeat 96% 55%;

	--space-3xs: #{map.get( units.$spacing, 'xx-small' )};
	--space-2xs: #{map.get( units.$spacing, 'xx-small' )};
	--space-xs: #{map.get( units.$spacing, 'x-small' )};
	--space-s: #{map.get( units.$spacing, 'small' )};
	--space-m: #{map.get( units.$spacing, 'medium' )};
	--space-l: #{map.get( units.$spacing, 'large' )};
	--space-xl: #{map.get( units.$spacing, 'x-large' )};
	--space-2xl: #{map.get( units.$spacing, 'xx-large' )};
	--space-3xl: #{map.get( units.$spacing, 'xxx-large' )};

	/* One-up pairs */
	--space-3xs-2xs: #{map.get( units.$spacing, 'xx-small' )};
	--space-2xs-xs: #{map.get( units.$spacing, 'x-small' )};
	--space-xs-s: #{map.get( units.$spacing, 'small' )};
	--space-s-m: #{map.get( units.$spacing, 'medium' )};
	--space-m-l: #{map.get( units.$spacing, 'large' )};
	--space-l-xl: #{map.get( units.$spacing, 'x-large' )};
	--space-xl-2xl: #{map.get( units.$spacing, 'xx-large' )};
	--space-2xl-3xl: #{map.get( units.$spacing, 'xxx-large' )};

	/* Custom pairs */
	--space-s-l: #{map.get( units.$spacing, 'medium' )};
	--space-s-xl: #{map.get( units.$spacing, 'large' )};
	--space-xs-l: #{map.get( units.$spacing, 'large' )};
	--space-0-s: #{map.get( units.$spacing, 'x-small' )};

	--type-step-00: 13px;

	/* Type Leading */
	--leading-micro: 0.85;
	--leading-flat: 1;
	--leading-fine: 1.2;
	--leading-standard: 1.4;
	--leading-loose: 1.7;
}
