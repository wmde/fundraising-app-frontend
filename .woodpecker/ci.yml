# This is the "build" step for creating deployable archives of the frontend app.
# 
# We don't run `npm run ci` again, because the Jest tests take too long (~10 minutes).
# Instead, we rely on the checks being run in the GitHub action and blindly build the assets.
#
steps:
    -   name: build
        when: 
          # Note that for pull request events (`pull_request`, `pull_request_closed`) the 
          # variable $CI_COMMIT_BRANCH (i.e. "branch name") is the 
          # *target* branch of the pull request (e.g. "main" for a PR to main from a feature branch)
          # This is why we don't included the events in the `when` clause above.
          # The build step would override `main` with a random feature branch
          # When we merge a feature branch into `main`, this will trigger a `push` event on `main`
          - event: [ push, cron, manual ]
            branch:
              exclude: [ dependabot/* ]
        image: node:20-alpine
        volumes:
          - /home/deploy/fundraising-app-frontend-builds:/build
          - /tmp/woodpeckerci/cache/npm:/npmcache
        environment:
          VUE_APP_ERRBIT_PROJECT_KEY:
            from_secret: errbit_key
        commands:
            - npm ci --cache /npmcache
            - npm run build
            - echo "$CI_COMMIT_BRANCH" > dist/DEPLOY_ID
            - echo "$CI_COMMIT_SHA" >> dist/DEPLOY_ID
            - echo "$CI_PIPELINE_STARTED" >> dist/DEPLOY_ID
            - cd dist/
            # Replace slashes with underscores, add suffix
            - ARCHIVE_NAME="${CI_COMMIT_BRANCH//\//_}.tar.gz"
            - tar -czvf /build/$ARCHIVE_NAME .
            # 1008 is the hardcoded user ID of the deploy user
            - chown 1008:1008 /build/$ARCHIVE_NAME

